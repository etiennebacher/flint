[{"path":"https://flint.etiennebacher.com/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to flint","title":"Contributing to flint","text":"outlines propose change flint.","code":""},{"path":"https://flint.etiennebacher.com/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to flint","text":"Small typos grammatical errors vignettes can fixed directly Github interface since vignettes automatically rendered pkgdown. Fixing typos documentation functions (“Reference” page) requires editing source corresponding .R file run devtools::document(). edit .Rd file man/.","code":""},{"path":"https://flint.etiennebacher.com/CONTRIBUTING.html","id":"filing-an-issue","dir":"","previous_headings":"","what":"Filing an issue","title":"Contributing to flint","text":"easiest way propose change new feature file issue. ’ve found bug, may also create associated issue. possible, try illustrate proposal bug minimal reproducible example.","code":""},{"path":[]},{"path":"https://flint.etiennebacher.com/CONTRIBUTING.html","id":"general-information","dir":"","previous_headings":"Pull requests","what":"General information","title":"Contributing to flint","text":"Please create Git branch pull request (PR). flint uses roxygen2, Markdown syntax, documentation. PR user-visible change, may add bullet point NEWS.md describing changes made. may optionally add GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://flint.etiennebacher.com/CONTRIBUTING.html","id":"how-to-add-a-new-lint-rule-in-flint","dir":"","previous_headings":"Pull requests","what":"How to add a new lint rule in flint?","title":"Contributing to flint","text":"Adding rule exists lintr: Create new .yml file inst new_rule(\"<rule_name>\"), e.g new_rule(\"expect_length\"). Import tests lintr get_tests_from_lintr(\"<rule_name>\"), e.g get_tests_from_lintr(\"expect_length\"). Add \"<rule_name>\" list linters located R/list-linters.R. Load package devtools::load_all(). Uncomment run block commented code list_linters() function added rule. creates new entry R/linters_factory.R. Run devtools::document() register new entry. Tweak .yml file tests pass (cases, lintr tests can commented ). Add additional snapshot tests fix_text(), e.g.","code":"test_that(\"fix works\", {   linter <- expect_length_linter()    expect_snapshot(fix_text(\"expect_equal(length(x), 2L)\", linters = linter))   expect_snapshot(fix_text(\"expect_identical(length(x), 2L)\", linters = linter))    expect_snapshot(fix_text(\"expect_equal(2L, length(x))\", linters = linter))   expect_snapshot(fix_text(\"expect_identical(2L, length(x))\", linters = linter)) })"},{"path":"https://flint.etiennebacher.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 flint authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://flint.etiennebacher.com/articles/adding_rules.html","id":"step-1-setup","dir":"Articles","previous_headings":"","what":"Step 1: setup","title":"Adding new rules","text":"need three things start experimenting new rules: example: can taken lintr’s examples specific linter. instance can already run lint_text(\".numeric(y) || .integer(y)\"). doesn’t return anything since haven’t implemented rule yet. rule: requires storing new YAML file flint/rules. can call one is_numeric.yml. store rule name (\"is_numeric\") list_linters(). Additionally, rules want add part lintr, can copy tests stored lintr test suite ensure rules cover corner cases.","code":""},{"path":"https://flint.etiennebacher.com/articles/adding_rules.html","id":"step-2-start-exploring","dir":"Articles","previous_headings":"","what":"Step 2: start exploring","title":"Adding new rules","text":"lintr::is_numeric_linter(), want warn one uses .numeric(y) || .integer(y) .integer(y) || .numeric(y) since equivalent .numeric(y). rule, can already add two patterns using : Running example now shows message: can see lintr::is_numeric_linter() examples cases warn. instance, class(z) %% c(\"numeric\", \"integer\") warn since equivalent .numeric(z), class(z) %% c(\"numeric\", \"integer\", \"factor\") shouldn’t. can add second rule YAML file adding separator ---: now works well: Notice however patterns rule use double quotation marks \". happens code single quotation marks ' instead? doesn’t work. remedy , can use strictness parameter ast-grep, comes sublevel pattern level. default, strictness smart want ignore quotation set ast (see examples): now wanted:","code":"id: is_numeric_1 language: r severity: warning rule:   any:     - pattern: is.numeric($VAR) || is.integer($VAR)     - pattern: is.integer($VAR) || is.numeric($VAR) message: is.numeric(x) is the same as is.numeric(x) || is.integer(x). Use     is.double(x) to test for objects stored as 64-bit floating point. lint_text(\"is.numeric(y) || is.integer(y)\") #> Original code: is.numeric(y) || is.integer(y)  #> Suggestion: is.numeric(x) || is.integer(x) can be simplified to is.numeric(x). Use is.double(x) to test for objects stored as 64-bit floating point. id: is_numeric_1 language: r severity: warning rule:   any:     - pattern: is.numeric($VAR) || is.integer($VAR)     - pattern: is.integer($VAR) || is.numeric($VAR) message: is.numeric(x) || is.integer(x) can be simplified to is.numeric(x). Use     is.double(x) to test for objects stored as 64-bit floating point.  ---  id: is_numeric_2 language: r severity: warning rule:   any:     - pattern: class($VAR) %in% c(\"numeric\", \"integer\")     - pattern: class($VAR) %in% c(\"integer\", \"numeric\") message: class(x) %in% c(\"numeric\", \"integer\") can be simplified to is.numeric(x). Use     is.double(x) to test for objects stored as 64-bit floating point. lint_text('class(z) %in% c(\"numeric\", \"integer\")') #> Original code: class(z) %in% c(\"numeric\", \"integer\")  #> Suggestion: class(x) %in% c(\"numeric\", \"integer\") can be simplified to is.numeric(x). Use is.double(x) to test for objects stored as 64-bit floating point. lint_text('class(z) %in% c(\"numeric\", \"integer\", \"factor\")') lint_text(\"class(z) %in% c('numeric', 'integer')\") id: is_numeric_2 language: r severity: warning rule:   any:     - pattern:         context: class($VAR) %in% c(\"numeric\", \"integer\")         strictness: ast     - pattern:         context: class($VAR) %in% c(\"integer\", \"numeric\")         strictness: ast message: class(x) %in% c(\"numeric\", \"integer\") can be simplified to is.numeric(x). Use     is.double(x) to test for objects stored as 64-bit floating point. lint_text(\"class(z) %in% c('numeric', 'integer')\") #> Original code: class(z) %in% c('numeric', 'integer')  #> Suggestion: class(x) %in% c(\"numeric\", \"integer\") can be simplified to is.numeric(x). Use is.double(x) to test for objects stored as 64-bit floating point.   lint_text('class(z) %in% c(\"numeric\", \"integer\")') #> Original code: class(z) %in% c('numeric', 'integer')  #> Suggestion: class(x) %in% c(\"numeric\", \"integer\") can be simplified to is.numeric(x). Use is.double(x) to test for objects stored as 64-bit floating point."},{"path":"https://flint.etiennebacher.com/articles/adding_rules.html","id":"step-3-corner-cases","dir":"Articles","previous_headings":"","what":"Step 3: corner cases","title":"Adding new rules","text":"want avoid false positives false negatives. rule exists lintr can copy section test suite tests rule. case, file.","code":""},{"path":"https://flint.etiennebacher.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Etienne Bacher. Author, maintainer, copyright holder.","code":""},{"path":"https://flint.etiennebacher.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bacher E (2024). flint: Find Fix Lints R Code. R package version 0.0.3.9000, https://github.com/etiennebacher/flint, https://flint.etiennebacher.com.","code":"@Manual{,   title = {flint: Find and Fix Lints in R Code},   author = {Etienne Bacher},   year = {2024},   note = {R package version 0.0.3.9000, https://github.com/etiennebacher/flint},   url = {https://flint.etiennebacher.com}, }"},{"path":"https://flint.etiennebacher.com/index.html","id":"flint","dir":"","previous_headings":"","what":"Find and Fix Lints in R Code","title":"Find and Fix Lints in R Code","text":"flint small R package find replace lints R code. Lints detection lint() Automatic replacement lints fix() Compatibility () lintr rules Fast Low-dependency flint powered astgrepr, built Rust crate ast-grep.","code":""},{"path":[]},{"path":"https://flint.etiennebacher.com/index.html","id":"windows-or-macos","dir":"","previous_headings":"Installation","what":"Windows or macOS","title":"Find and Fix Lints in R Code","text":"","code":"install.packages(   'flint',    repos = c('https://etiennebacher.r-universe.dev', getOption(\"repos\")) )"},{"path":"https://flint.etiennebacher.com/index.html","id":"linux","dir":"","previous_headings":"Installation","what":"Linux","title":"Find and Fix Lints in R Code","text":"","code":"install.packages(   'flint',    repos = c('https://etiennebacher.r-universe.dev/bin/linux/jammy/4.3', getOption(\"repos\")) )"},{"path":"https://flint.etiennebacher.com/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Find and Fix Lints in R Code","text":"Optional setup: setup_flint(): creates folder flint populates built-rules well cache file. can modify rules add new ones want control. can use flint -, without setup. However, running setup_flint() enables use caching, meaning subsequent runs faster. also gives place can store custom rules project/package. everyday usage consists two functions: lint() looks lints R files; fix() looks lints R files automatically applies replacement (). One can also experiment flint::lint_text() flint::fix_text():","code":"flint::lint_text(\" any(is.na(x)) any(duplicated(y)) \") #> Original code: any(is.na(x))  #> Suggestion: anyNA(x) is better than any(is.na(x)).  #>  #> Original code: any(duplicated(y))  #> Suggestion: anyDuplicated(x, ...) > 0 is better than any(duplicated(x), ...). flint::fix_text(\" any(is.na(x)) any(duplicated(y)) \") #> Old code: #> any(is.na(x)) #> any(duplicated(y)) #>  #> New code: #> anyNA(x) #> anyDuplicated(y) > 0"},{"path":"https://flint.etiennebacher.com/index.html","id":"comparison-with-existing-tools","dir":"","previous_headings":"","what":"Comparison with existing tools","title":"Find and Fix Lints in R Code","text":"used tool lints detection R lintr. However, lintr’s performance optimal applied medium large packages. Also, lintr perform automatic replacement lints. styler package clean code fixing indentation things, doesn’t perform code replacement based lints. flint extremely performant. small benchmark 3.5k lines code three linters:","code":"file <- system.file(\"bench/test.R\", package = \"flint\")  bench::mark(   lintr = lintr::lint(     file, linters = list(lintr::any_duplicated_linter(), lintr::any_is_na_linter(),                          lintr::matrix_apply_linter())   ),   flint = flint::lint(     file, linters = list(flint::any_duplicated_linter(), flint::any_is_na_linter(),                          flint::matrix_apply_linter()),      open = FALSE   ),   check = FALSE ) #> Warning: Some expressions had a GC in every iteration; so filtering is #> disabled. #> # A tibble: 2 × 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 lintr         1.98s    1.98s     0.505  318.54MB    15.1  #> 2 flint       64.05ms  76.21ms    13.3      1.22MB     5.68"},{"path":"https://flint.etiennebacher.com/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Find and Fix Lints in R Code","text":"find bugs errors documentation? want flint support rules? Take look contributing guide instructions bug report pull requests.","code":""},{"path":"https://flint.etiennebacher.com/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Find and Fix Lints in R Code","text":"website theme heavily inspired Matthew Kay’s ggblend package: https://mjskay.github.io/ggblend/.","code":""},{"path":"https://flint.etiennebacher.com/reference/T_and_F_symbol_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"T_and_F_symbol — T_and_F_symbol_linter","title":"T_and_F_symbol — T_and_F_symbol_linter","text":"T_and_F_symbol","code":""},{"path":"https://flint.etiennebacher.com/reference/T_and_F_symbol_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"T_and_F_symbol — T_and_F_symbol_linter","text":"","code":"T_and_F_symbol_linter"},{"path":"https://flint.etiennebacher.com/reference/absolute_path_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"absolute_path — absolute_path_linter","title":"absolute_path — absolute_path_linter","text":"absolute_path","code":""},{"path":"https://flint.etiennebacher.com/reference/absolute_path_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"absolute_path — absolute_path_linter","text":"","code":"absolute_path_linter"},{"path":"https://flint.etiennebacher.com/reference/any_duplicated_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"any_duplicated — any_duplicated_linter","title":"any_duplicated — any_duplicated_linter","text":"any_duplicated","code":""},{"path":"https://flint.etiennebacher.com/reference/any_duplicated_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"any_duplicated — any_duplicated_linter","text":"","code":"any_duplicated_linter"},{"path":"https://flint.etiennebacher.com/reference/any_is_na_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"any_is_na — any_is_na_linter","title":"any_is_na — any_is_na_linter","text":"any_is_na","code":""},{"path":"https://flint.etiennebacher.com/reference/any_is_na_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"any_is_na — any_is_na_linter","text":"","code":"any_is_na_linter"},{"path":"https://flint.etiennebacher.com/reference/class_equals_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"class_equals — class_equals_linter","title":"class_equals — class_equals_linter","text":"class_equals","code":""},{"path":"https://flint.etiennebacher.com/reference/class_equals_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"class_equals — class_equals_linter","text":"","code":"class_equals_linter"},{"path":"https://flint.etiennebacher.com/reference/double_assignment_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"double_assignment — double_assignment_linter","title":"double_assignment — double_assignment_linter","text":"double_assignment","code":""},{"path":"https://flint.etiennebacher.com/reference/double_assignment_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"double_assignment — double_assignment_linter","text":"","code":"double_assignment_linter"},{"path":"https://flint.etiennebacher.com/reference/duplicate_argument_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"duplicate_argument — duplicate_argument_linter","title":"duplicate_argument — duplicate_argument_linter","text":"duplicate_argument","code":""},{"path":"https://flint.etiennebacher.com/reference/duplicate_argument_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"duplicate_argument — duplicate_argument_linter","text":"","code":"duplicate_argument_linter"},{"path":"https://flint.etiennebacher.com/reference/empty_assignment_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"empty_assignment — empty_assignment_linter","title":"empty_assignment — empty_assignment_linter","text":"empty_assignment","code":""},{"path":"https://flint.etiennebacher.com/reference/empty_assignment_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"empty_assignment — empty_assignment_linter","text":"","code":"empty_assignment_linter"},{"path":"https://flint.etiennebacher.com/reference/equal_assignment_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"equal_assignment — equal_assignment_linter","title":"equal_assignment — equal_assignment_linter","text":"equal_assignment","code":""},{"path":"https://flint.etiennebacher.com/reference/equal_assignment_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"equal_assignment — equal_assignment_linter","text":"","code":"equal_assignment_linter"},{"path":"https://flint.etiennebacher.com/reference/equals_na_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"equals_na — equals_na_linter","title":"equals_na — equals_na_linter","text":"equals_na","code":""},{"path":"https://flint.etiennebacher.com/reference/equals_na_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"equals_na — equals_na_linter","text":"","code":"equals_na_linter"},{"path":"https://flint.etiennebacher.com/reference/expect_length_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"expect_length — expect_length_linter","title":"expect_length — expect_length_linter","text":"expect_length","code":""},{"path":"https://flint.etiennebacher.com/reference/expect_length_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expect_length — expect_length_linter","text":"","code":"expect_length_linter"},{"path":"https://flint.etiennebacher.com/reference/expect_named_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"expect_named — expect_named_linter","title":"expect_named — expect_named_linter","text":"expect_named","code":""},{"path":"https://flint.etiennebacher.com/reference/expect_named_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expect_named — expect_named_linter","text":"","code":"expect_named_linter"},{"path":"https://flint.etiennebacher.com/reference/expect_not_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"expect_not — expect_not_linter","title":"expect_not — expect_not_linter","text":"expect_not","code":""},{"path":"https://flint.etiennebacher.com/reference/expect_not_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expect_not — expect_not_linter","text":"","code":"expect_not_linter"},{"path":"https://flint.etiennebacher.com/reference/expect_null_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"expect_null — expect_null_linter","title":"expect_null — expect_null_linter","text":"expect_null","code":""},{"path":"https://flint.etiennebacher.com/reference/expect_null_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expect_null — expect_null_linter","text":"","code":"expect_null_linter"},{"path":"https://flint.etiennebacher.com/reference/expect_true_false_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"expect_true_false — expect_true_false_linter","title":"expect_true_false — expect_true_false_linter","text":"expect_true_false","code":""},{"path":"https://flint.etiennebacher.com/reference/expect_true_false_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expect_true_false — expect_true_false_linter","text":"","code":"expect_true_false_linter"},{"path":"https://flint.etiennebacher.com/reference/expect_type_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"expect_type — expect_type_linter","title":"expect_type — expect_type_linter","text":"expect_type","code":""},{"path":"https://flint.etiennebacher.com/reference/expect_type_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expect_type — expect_type_linter","text":"","code":"expect_type_linter"},{"path":"https://flint.etiennebacher.com/reference/fix.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically replace lints — fix","title":"Automatically replace lints — fix","text":"fix(), fix_package(), fix_dir() replace lints files. difference input take: fix() takes path files directories fix_dir() takes path one directory fix_package() takes path root package looks following list folders: R, tests, inst, vignettes, data-raw, demo, exec. fix_text() takes text input. main interest able quickly experiment lints fixes.","code":""},{"path":"https://flint.etiennebacher.com/reference/fix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically replace lints — fix","text":"","code":"fix(path = \".\", linters = NULL, exclude_path = NULL, exclude_linters = NULL)  fix_dir(   path = \".\",   linters = NULL,   exclude_path = NULL,   exclude_linters = NULL )  fix_package(   path = \".\",   linters = NULL,   exclude_path = NULL,   exclude_linters = NULL )  fix_text(text, linters = NULL, exclude_linters = NULL)"},{"path":"https://flint.etiennebacher.com/reference/fix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically replace lints — fix","text":"path valid path file directory. Relative paths accepted. linters character vector names rules apply. See entire list rules list_linters(). exclude_path One several paths ignored path selection. exclude_linters One several linters checked. Values can names linters (\"any_is_na\") associated function, any_is_na_linter() (mostly compatibility lintr). text Text analyze (fix necessary).","code":""},{"path":"https://flint.etiennebacher.com/reference/fix.html","id":"ignoring-lines","dir":"Reference","previous_headings":"","what":"Ignoring lines","title":"Automatically replace lints — fix","text":"flint supports ignoring single lines code # flint-ignore. example, warn:   However, warn second (duplicated()):   ignore one line code, use # flint-ignore-start # flint-ignore-end:","code":"# flint-ignore any(duplicated(x)) # flint-ignore any(duplicated(x)) any(duplicated(y)) # flint-ignore-start any(duplicated(x)) any(duplicated(y)) # flint-ignore-end"},{"path":"https://flint.etiennebacher.com/reference/fix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically replace lints — fix","text":"","code":"# `fix_text()` is convenient to explore with a small example fix_text(\"any(duplicated(rnorm(5)))\") #> Old code: any(duplicated(rnorm(5)))  #> New code: anyDuplicated(rnorm(5)) > 0   fix_text(\"any(duplicated(rnorm(5))) any(is.na(x)) \") #> Old code: #> any(duplicated(rnorm(5))) #> any(is.na(x)) #>  #> New code: #> anyDuplicated(rnorm(5)) > 0 #> anyNA(x)  # Setup for the example with `fix()` destfile <- tempfile() cat(\" x = c(1, 2, 3) any(duplicated(x), na.rm = TRUE)  any(duplicated(x))  if (any(is.na(x))) {   TRUE }  any(   duplicated(x) )\", file = destfile)  fix(destfile) cat(paste(readLines(destfile), collapse = \"\\n\")) #>  #> x <- c(1, 2, 3) #> anyDuplicated(x) > 0 #>  #> anyDuplicated(x) > 0 #>  #> if (anyNA(x)) { #>   TRUE #> } #>  #> anyDuplicated(x) > 0"},{"path":"https://flint.etiennebacher.com/reference/flint-package.html","id":null,"dir":"Reference","previous_headings":"","what":"flint: Find and Fix Lints in R Code — flint-package","title":"flint: Find and Fix Lints in R Code — flint-package","text":"Lints code patterns optimal inefficient, forget corner cases, less readable. 'flint' provides small set functions detect lints automatically fix . builds 'astgrepr', uses Rust crate 'ast-grep' parse navigate R code.","code":""},{"path":[]},{"path":"https://flint.etiennebacher.com/reference/flint-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"flint: Find and Fix Lints in R Code — flint-package","text":"Maintainer: Etienne Bacher etienne.bacher@protonmail.com [copyright holder]","code":""},{"path":"https://flint.etiennebacher.com/reference/implicit_assignment_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"implicit_assignment — implicit_assignment_linter","title":"implicit_assignment — implicit_assignment_linter","text":"implicit_assignment","code":""},{"path":"https://flint.etiennebacher.com/reference/implicit_assignment_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"implicit_assignment — implicit_assignment_linter","text":"","code":"implicit_assignment_linter"},{"path":"https://flint.etiennebacher.com/reference/is_numeric_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"is_numeric — is_numeric_linter","title":"is_numeric — is_numeric_linter","text":"is_numeric","code":""},{"path":"https://flint.etiennebacher.com/reference/is_numeric_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_numeric — is_numeric_linter","text":"","code":"is_numeric_linter"},{"path":"https://flint.etiennebacher.com/reference/length_levels_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"length_levels — length_levels_linter","title":"length_levels — length_levels_linter","text":"length_levels","code":""},{"path":"https://flint.etiennebacher.com/reference/length_levels_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"length_levels — length_levels_linter","text":"","code":"length_levels_linter"},{"path":"https://flint.etiennebacher.com/reference/length_test_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"length_test — length_test_linter","title":"length_test — length_test_linter","text":"length_test","code":""},{"path":"https://flint.etiennebacher.com/reference/length_test_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"length_test — length_test_linter","text":"","code":"length_test_linter"},{"path":"https://flint.etiennebacher.com/reference/lengths_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"lengths — lengths_linter","title":"lengths — lengths_linter","text":"lengths","code":""},{"path":"https://flint.etiennebacher.com/reference/lengths_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lengths — lengths_linter","text":"","code":"lengths_linter"},{"path":"https://flint.etiennebacher.com/reference/library_call_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"library_call — library_call_linter","title":"library_call — library_call_linter","text":"library_call","code":""},{"path":"https://flint.etiennebacher.com/reference/library_call_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"library_call — library_call_linter","text":"","code":"library_call_linter"},{"path":"https://flint.etiennebacher.com/reference/lint.html","id":null,"dir":"Reference","previous_headings":"","what":"List all lints in a file or a directory — lint","title":"List all lints in a file or a directory — lint","text":"lint(), lint_text(), lint_package(), lint_dir() produce data.frame containing lints, location, potential fixes. difference input take: lint() takes path files directories lint_text() takes text input lint_dir() takes path one directory lint_package() takes path root package looks following list folders: R, tests, inst, vignettes, data-raw, demo, exec.","code":""},{"path":"https://flint.etiennebacher.com/reference/lint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all lints in a file or a directory — lint","text":"","code":"lint(   path = \".\",   linters = NULL,   exclude_path = NULL,   exclude_linters = NULL,   open = TRUE,   use_cache = TRUE )  lint_dir(   path = \".\",   linters = NULL,   open = TRUE,   exclude_path = NULL,   exclude_linters = NULL,   use_cache = TRUE )  lint_package(   path = \".\",   linters = NULL,   open = TRUE,   exclude_path = NULL,   exclude_linters = NULL,   use_cache = TRUE )  lint_text(text, linters = NULL, exclude_linters = NULL)"},{"path":"https://flint.etiennebacher.com/reference/lint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all lints in a file or a directory — lint","text":"path valid path file directory. Relative paths accepted. linters character vector names rules apply. See entire list rules list_linters(). exclude_path One several paths ignored path selection. exclude_linters One several linters checked. Values can names linters (\"any_is_na\") associated function, any_is_na_linter() (mostly compatibility lintr). open TRUE (default) used RStudio IDE, lints shown markers. use_cache re-parse files changed since last time function ran. text Text analyze.","code":""},{"path":"https://flint.etiennebacher.com/reference/lint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all lints in a file or a directory — lint","text":"dataframe row lint. columns show text, location (position text file found) severity.","code":""},{"path":"https://flint.etiennebacher.com/reference/lint.html","id":"ignoring-lines","dir":"Reference","previous_headings":"","what":"Ignoring lines","title":"List all lints in a file or a directory — lint","text":"flint supports ignoring single lines code # flint-ignore. example, warn:   However, warn second (duplicated()):   ignore one line code, use # flint-ignore-start # flint-ignore-end:","code":"# flint-ignore any(duplicated(x)) # flint-ignore any(duplicated(x)) any(duplicated(y)) # flint-ignore-start any(duplicated(x)) any(duplicated(y)) # flint-ignore-end"},{"path":"https://flint.etiennebacher.com/reference/lint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all lints in a file or a directory — lint","text":"","code":"# `lint_text()` is convenient to explore with a small example lint_text(\"any(duplicated(rnorm(5)))\") #> Original code: any(duplicated(rnorm(5)))  #> Suggestion: anyDuplicated(x, ...) > 0 is better than any(duplicated(x), ...).  #>   lint_text(\"any(duplicated(rnorm(5))) any(is.na(x)) \") #> Original code: any(duplicated(rnorm(5)))  #> Suggestion: anyDuplicated(x, ...) > 0 is better than any(duplicated(x), ...).  #>  #> Original code: any(is.na(x))  #> Suggestion: anyNA(x) is better than any(is.na(x)).  #>   # Setup for the example with `lint()` destfile <- tempfile() cat(\" x = c(1, 2, 3) any(duplicated(x), na.rm = TRUE)  any(duplicated(x))  if (any(is.na(x))) {   TRUE }  any(   duplicated(x) )\", file = destfile)  lint(destfile) #>                  id                             text line_start col_start #>              <char>                           <char>      <num>     <num> #> 1: equal_assignment                   x = c(1, 2, 3)          2         1 #> 2:   any_duplicated any(duplicated(x), na.rm = TRUE)          3         1 #> 3:   any_duplicated               any(duplicated(x))          5         1 #> 4:           any_na                    any(is.na(x))          7         5 #> 5:   any_duplicated         any(\\n  duplicated(x)\\n)         11         1 #>    line_end col_end severity                          fix #>       <num>   <num>   <char>                       <char> #> 1:        2      15     hint           ~~LHS~~ <- ~~RHS~~ #> 2:        3      33  warning anyDuplicated(~~MYVAR~~) > 0 #> 3:        5      19  warning anyDuplicated(~~MYVAR~~) > 0 #> 4:        7      18  warning             anyNA(~~MYVAR~~) #> 5:       13       2  warning anyDuplicated(~~MYVAR~~) > 0 #>                                                              message #>                                                               <char> #> 1:                                    Use <-, not =, for assignment. #> 2: anyDuplicated(x, ...) > 0 is better than any(duplicated(x), ...). #> 3: anyDuplicated(x, ...) > 0 is better than any(duplicated(x), ...). #> 4:                            anyNA(x) is better than any(is.na(x)). #> 5: anyDuplicated(x, ...) > 0 is better than any(duplicated(x), ...). #>                                file #>                              <char> #> 1: /tmp/RtmpkjZzUr/file172840b2a5db #> 2: /tmp/RtmpkjZzUr/file172840b2a5db #> 3: /tmp/RtmpkjZzUr/file172840b2a5db #> 4: /tmp/RtmpkjZzUr/file172840b2a5db #> 5: /tmp/RtmpkjZzUr/file172840b2a5db"},{"path":"https://flint.etiennebacher.com/reference/list_linters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of linters in flint — list_linters","title":"Get the list of linters in flint — list_linters","text":"Get list linters flint","code":""},{"path":"https://flint.etiennebacher.com/reference/list_linters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of linters in flint — list_linters","text":"","code":"list_linters()"},{"path":"https://flint.etiennebacher.com/reference/list_linters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of linters in flint — list_linters","text":"character vector","code":""},{"path":"https://flint.etiennebacher.com/reference/list_linters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of linters in flint — list_linters","text":"","code":"list_linters() #>  [1] \"absolute_path\"        \"any_duplicated\"       \"any_is_na\"            #>  [4] \"class_equals\"         \"double_assignment\"    \"duplicate_argument\"   #>  [7] \"empty_assignment\"     \"equal_assignment\"     \"equals_na\"            #> [10] \"expect_length\"        \"expect_named\"         \"expect_not\"           #> [13] \"expect_null\"          \"expect_true_false\"    \"expect_type\"          #> [16] \"implicit_assignment\"  \"is_numeric\"           \"length_levels\"        #> [19] \"length_test\"          \"lengths\"              \"library_call\"         #> [22] \"literal_coercion\"     \"matrix_apply\"         \"nested_ifelse\"        #> [25] \"numeric_leading_zero\" \"outer_negation\"       \"paste\"                #> [28] \"redundant_ifelse\"     \"right_assignment\"     \"semicolon\"            #> [31] \"seq\"                  \"sort\"                 \"T_and_F_symbol\"       #> [34] \"undesirable_function\" \"undesirable_operator\" \"unreachable_code\""},{"path":"https://flint.etiennebacher.com/reference/literal_coercion_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"literal_coercion — literal_coercion_linter","title":"literal_coercion — literal_coercion_linter","text":"literal_coercion","code":""},{"path":"https://flint.etiennebacher.com/reference/literal_coercion_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"literal_coercion — literal_coercion_linter","text":"","code":"literal_coercion_linter"},{"path":"https://flint.etiennebacher.com/reference/matrix_apply_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"matrix_apply — matrix_apply_linter","title":"matrix_apply — matrix_apply_linter","text":"matrix_apply","code":""},{"path":"https://flint.etiennebacher.com/reference/matrix_apply_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matrix_apply — matrix_apply_linter","text":"","code":"matrix_apply_linter"},{"path":"https://flint.etiennebacher.com/reference/nested_ifelse_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"nested_ifelse — nested_ifelse_linter","title":"nested_ifelse — nested_ifelse_linter","text":"nested_ifelse","code":""},{"path":"https://flint.etiennebacher.com/reference/nested_ifelse_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nested_ifelse — nested_ifelse_linter","text":"","code":"nested_ifelse_linter"},{"path":"https://flint.etiennebacher.com/reference/numeric_leading_zero_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"numeric_leading_zero — numeric_leading_zero_linter","title":"numeric_leading_zero — numeric_leading_zero_linter","text":"numeric_leading_zero","code":""},{"path":"https://flint.etiennebacher.com/reference/numeric_leading_zero_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"numeric_leading_zero — numeric_leading_zero_linter","text":"","code":"numeric_leading_zero_linter"},{"path":"https://flint.etiennebacher.com/reference/outer_negation_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"outer_negation — outer_negation_linter","title":"outer_negation — outer_negation_linter","text":"outer_negation","code":""},{"path":"https://flint.etiennebacher.com/reference/outer_negation_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"outer_negation — outer_negation_linter","text":"","code":"outer_negation_linter"},{"path":"https://flint.etiennebacher.com/reference/paste_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"paste — paste_linter","title":"paste — paste_linter","text":"paste","code":""},{"path":"https://flint.etiennebacher.com/reference/paste_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"paste — paste_linter","text":"","code":"paste_linter"},{"path":"https://flint.etiennebacher.com/reference/redundant_ifelse_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"redundant_ifelse — redundant_ifelse_linter","title":"redundant_ifelse — redundant_ifelse_linter","text":"redundant_ifelse","code":""},{"path":"https://flint.etiennebacher.com/reference/redundant_ifelse_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"redundant_ifelse — redundant_ifelse_linter","text":"","code":"redundant_ifelse_linter"},{"path":"https://flint.etiennebacher.com/reference/right_assignment_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"right_assignment — right_assignment_linter","title":"right_assignment — right_assignment_linter","text":"right_assignment","code":""},{"path":"https://flint.etiennebacher.com/reference/right_assignment_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"right_assignment — right_assignment_linter","text":"","code":"right_assignment_linter"},{"path":"https://flint.etiennebacher.com/reference/semicolon_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"semicolon — semicolon_linter","title":"semicolon — semicolon_linter","text":"semicolon","code":""},{"path":"https://flint.etiennebacher.com/reference/semicolon_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"semicolon — semicolon_linter","text":"","code":"semicolon_linter"},{"path":"https://flint.etiennebacher.com/reference/seq_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"seq — seq_linter","title":"seq — seq_linter","text":"seq","code":""},{"path":"https://flint.etiennebacher.com/reference/seq_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seq — seq_linter","text":"","code":"seq_linter"},{"path":"https://flint.etiennebacher.com/reference/setup_flint.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup flint — setup_flint","title":"Setup flint — setup_flint","text":"stores default rules internal files inst/flint. also imports sgconfig.yml used ast-grep. file must live root project renamed.","code":""},{"path":"https://flint.etiennebacher.com/reference/setup_flint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup flint — setup_flint","text":"","code":"setup_flint(path = \".\")"},{"path":"https://flint.etiennebacher.com/reference/setup_flint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup flint — setup_flint","text":"path Path package project root.","code":""},{"path":"https://flint.etiennebacher.com/reference/setup_flint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup flint — setup_flint","text":"Imports files necessary flint work return value R.","code":""},{"path":"https://flint.etiennebacher.com/reference/setup_flint_gha.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Github Actions workflow for flint — setup_flint_gha","title":"Create a Github Actions workflow for flint — setup_flint_gha","text":"Create Github Actions workflow flint","code":""},{"path":"https://flint.etiennebacher.com/reference/setup_flint_gha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Github Actions workflow for flint — setup_flint_gha","text":"","code":"setup_flint_gha(path = \".\")"},{"path":"https://flint.etiennebacher.com/reference/setup_flint_gha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Github Actions workflow for flint — setup_flint_gha","text":"path Root path package.","code":""},{"path":"https://flint.etiennebacher.com/reference/setup_flint_gha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Github Actions workflow for flint — setup_flint_gha","text":"Creates .github/workflows/flint.yaml return value.","code":""},{"path":"https://flint.etiennebacher.com/reference/sort_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"sort — sort_linter","title":"sort — sort_linter","text":"sort","code":""},{"path":"https://flint.etiennebacher.com/reference/sort_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sort — sort_linter","text":"","code":"sort_linter"},{"path":"https://flint.etiennebacher.com/reference/undesirable_function_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"undesirable_function — undesirable_function_linter","title":"undesirable_function — undesirable_function_linter","text":"undesirable_function","code":""},{"path":"https://flint.etiennebacher.com/reference/undesirable_function_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undesirable_function — undesirable_function_linter","text":"","code":"undesirable_function_linter"},{"path":"https://flint.etiennebacher.com/reference/undesirable_operator_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"undesirable_operator — undesirable_operator_linter","title":"undesirable_operator — undesirable_operator_linter","text":"undesirable_operator","code":""},{"path":"https://flint.etiennebacher.com/reference/undesirable_operator_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"undesirable_operator — undesirable_operator_linter","text":"","code":"undesirable_operator_linter"},{"path":"https://flint.etiennebacher.com/reference/unreachable_code_linter.html","id":null,"dir":"Reference","previous_headings":"","what":"unreachable_code — unreachable_code_linter","title":"unreachable_code — unreachable_code_linter","text":"unreachable_code","code":""},{"path":"https://flint.etiennebacher.com/reference/unreachable_code_linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unreachable_code — unreachable_code_linter","text":"","code":"unreachable_code_linter"},{"path":"https://flint.etiennebacher.com/reference/update_flint.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the flint setup — update_flint","title":"Update the flint setup — update_flint","text":"flint updated, can ship new built-rules. update_flint() automatically add new rules flint/rules folder. New rules determined names rules already exist flint/rules affected. instance, added custom rule use_paste.yml, never removed update_flint(), even flint later adds built-rule also named use_paste.yml.","code":""},{"path":"https://flint.etiennebacher.com/reference/update_flint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the flint setup — update_flint","text":"","code":"update_flint(path = \".\")"},{"path":"https://flint.etiennebacher.com/reference/update_flint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the flint setup — update_flint","text":"path Path package project root.","code":""},{"path":"https://flint.etiennebacher.com/reference/update_flint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the flint setup — update_flint","text":"Can add new files flint/rules folder, return anything.","code":""},{"path":"https://flint.etiennebacher.com/reference/update_flint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update the flint setup — update_flint","text":"","code":"if (FALSE) { # \\dontrun{   update_flint() } # }"},{"path":[]},{"path":"https://flint.etiennebacher.com/news/index.html","id":"new-features-0-0-3","dir":"Changelog","previous_headings":"","what":"New features","title":"flint 0.0.3","text":"New linters: absolute_path, duplicate_argument, empty_assignment, expect_length, expect_not, expect_null, expect_true_false, expect_type, literal_coercion, nested_ifelse, sort, undesirable_operator. Added contributing guide. Better docs fix() variants. Using fix() several files without using Git now opens interactive menu user confirms want run fix(). case non-interactive use, errors. Ignore lines following # nolint compatibility lintr.","code":""},{"path":"https://flint.etiennebacher.com/news/index.html","id":"bug-fixes-0-0-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"flint 0.0.3","text":"Fix false positives (#23, #24, #27).","code":""},{"path":[]},{"path":"https://flint.etiennebacher.com/news/index.html","id":"new-features-0-0-2","dir":"Changelog","previous_headings":"","what":"New features","title":"flint 0.0.2","text":"New linters: expect_named, numeric_leading_zero, outer_negation, redundant_ifelse, undesirable_function, unreachable_code. fix_dir(), fix_package(), lint_dir(), lint_package() now arguments exclude paths, linters, use cache. Removed browser linter (now part undesriable_function). Add support flint/config.yml file contains list linters use one doesn’t need constantly specify lint() fix().","code":""},{"path":"https://flint.etiennebacher.com/news/index.html","id":"bug-fixes-0-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"flint 0.0.2","text":"lint x %% class(y) x string equivalent cases. Thanks Vincent Arel-Bundock spotting .","code":""},{"path":"https://flint.etiennebacher.com/news/index.html","id":"flint-001","dir":"Changelog","previous_headings":"","what":"flint 0.0.1","title":"flint 0.0.1","text":"First Github release.","code":""}]
